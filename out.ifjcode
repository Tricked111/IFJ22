.IFJcode22
DEFVAR GF@__TMP1
DEFVAR GF@__TMP2
DEFVAR GF@__TMP3
DEFVAR GF@__ARG_CNT
JUMP __main
LABEL write
PUSHFRAME
LABEL __WRITE_WHILE
PUSHS GF@__ARG_CNT
PUSHS int@0
JUMPIFEQS __WRITE_WHILE_END
POPS GF@__TMP1
WRITE GF@__TMP1
SUB GF@__ARG_CNT GF@__ARG_CNT int@1
JUMP __WRITE_WHILE
LABEL __WRITE_WHILE_END
POPFRAME
RETURN
LABEL reads
PUSHFRAME
READ GF@__TMP1 string
PUSHS GF@__TMP1
POPFRAME
RETURN
LABEL readi
PUSHFRAME
READ GF@__TMP1 int
PUSHS GF@__TMP1
POPFRAME
RETURN
LABEL readf
PUSHFRAME
READ GF@__TMP1 float
PUSHS GF@__TMP1
POPFRAME
RETURN
LABEL substring
PUSHFRAME
DEFVAR LF@s
DEFVAR LF@i
DEFVAR LF@j
POPS LF@s
POPS LF@i
POPS LF@j
DEFVAR LF@nil_check
EQ LF@nil_check LF@s nil@nil
JUMPIFEQ substring_err_nil LF@nil_check bool@true
EQ LF@nil_check LF@i nil@nil
JUMPIFEQ substring_err_nil LF@nil_check bool@true
EQ LF@nil_check LF@j nil@nil
JUMPIFEQ substring_err_nil LF@nil_check bool@true
DEFVAR LF@jlti
LT LF@jlti LF@j LF@i
JUMPIFEQ substring_empty LF@jlti bool@true
SUB LF@i LF@i int@1
DEFVAR LF@ret
MOVE LF@ret string@
DEFVAR LF@aux
DEFVAR LF@jumpvar
MOVE LF@jumpvar LF@i
label cykleStart
LT LF@jumpvar LF@i LF@j
JUMPIFEQ cykleEnd LF@jumpvar bool@false
GETCHAR LF@aux LF@s LF@i
CONCAT LF@ret LF@ret LF@aux
ADD LF@i LF@i int@1
JUMP cykleStart
label cykleEnd
PUSHS LF@ret
POPFRAME
RETURN
LABEL substring_empty
DEFVAR LF@empty_str
MOVE LF@empty_str string@
PUSHS LF@empty_str
POPFRAME
RETURN
LABEL substring_err_nil
EXIT int@8
LABEL __main
CREATEFRAME
PUSHFRAME
CREATEFRAME
PUSHS string@Zadejte
MOVE GF@__ARG_CNT int@1
CALL write
PUSHS string@Zadejte
DEFVAR LF@a
CREATEFRAME
MOVE GF@__ARG_CNT int@0
CALL readi
POPS LF@a
PUSHS LF@a
PUSHS nil@nil
#EQVIVAL
POPS GF@__TMP2
POPS GF@__TMP1
TYPE GF@__TMP3 GF@__TMP1
PUSHS GF@__TMP3
TYPE GF@__TMP3 GF@__TMP2
PUSHS GF@__TMP3
EQS
PUSHS bool@false
JUMPIFEQS __CONV_1_1
PUSHS GF@__TMP1
PUSHS GF@__TMP2
EQS
JUMP __CONV_1_2
LABEL __CONV_1_1
PUSHS bool@false
LABEL __CONV_1_2
#EQVIVAL_END
#LOGIC_CHECK_START
POPS GF@__TMP1
PUSHS GF@__TMP1
TYPE GF@__TMP2 GF@__TMP1
PUSHS GF@__TMP2
PUSHS string@bool
EQS
PUSHS bool@false
JUMPIFEQS __CONV_2_1
PUSHS bool@false
EQS
NOTS
JUMP __CONV_2_END
LABEL __CONV_2_1
PUSHS GF@__TMP2
PUSHS string@int
EQS
PUSHS bool@false
JUMPIFEQS __CONV_2_2
PUSHS int@0
EQS
NOTS
JUMP __CONV_2_END
LABEL __CONV_2_2
PUSHS GF@__TMP2
PUSHS string@float
EQS
PUSHS bool@false
JUMPIFEQS __CONV_2_3
PUSHS float@0x0.0p+0
EQS
NOTS
JUMP __CONV_2_END
LABEL __CONV_2_3
PUSHS GF@__TMP2
PUSHS string@string
EQS
PUSHS bool@false
JUMPIFEQS __CONV_2_4
PUSHS string@
EQS
NOTS
JUMP __CONV_2_END
LABEL __CONV_2_4
POPS GF@__TMP2
PUSHS bool@false
LABEL __CONV_2_END
#LOGIC_CHECK_END
PUSHS bool@false
JUMPIFEQS __IF_0_ELSE
CREATEFRAME
PUSHS string@Chyba
MOVE GF@__ARG_CNT int@1
CALL write
PUSHS string@Chyba
JUMP __IF_0_END
LABEL __IF_0_ELSE
LABEL __IF_0_END
PUSHS LF@a
PUSHS int@0
#NUMERNUMERIC_CONVERTER_START
POPS GF@__TMP2
POPS GF@__TMP1
TYPE GF@__TMP3 GF@__TMP2
PUSHS GF@__TMP3
TYPE GF@__TMP3 GF@__TMP1
PUSHS GF@__TMP3
EQS
PUSHS bool@false
JUMPIFEQS __CONV_4_1
PUSHS GF@__TMP1
PUSHS GF@__TMP2
JUMP __CONV_4_2
LABEL __CONV_4_1
PUSHS GF@__TMP3
PUSHS string@float
EQS
PUSHS bool@false
JUMPIFEQS __CONV_4_3
PUSHS GF@__TMP1
PUSHS GF@__TMP2
INT2FLOATS
JUMP __CONV_4_2
LABEL __CONV_4_3
PUSHS GF@__TMP1
INT2FLOATS
PUSHS GF@__TMP2
LABEL __CONV_4_2
#NUMERNUMERIC_CONVERTER_END
LTS
#LOGIC_CHECK_START
POPS GF@__TMP1
PUSHS GF@__TMP1
TYPE GF@__TMP2 GF@__TMP1
PUSHS GF@__TMP2
PUSHS string@bool
EQS
PUSHS bool@false
JUMPIFEQS __CONV_5_1
PUSHS bool@false
EQS
NOTS
JUMP __CONV_5_END
LABEL __CONV_5_1
PUSHS GF@__TMP2
PUSHS string@int
EQS
PUSHS bool@false
JUMPIFEQS __CONV_5_2
PUSHS int@0
EQS
NOTS
JUMP __CONV_5_END
LABEL __CONV_5_2
PUSHS GF@__TMP2
PUSHS string@float
EQS
PUSHS bool@false
JUMPIFEQS __CONV_5_3
PUSHS float@0x0.0p+0
EQS
NOTS
JUMP __CONV_5_END
LABEL __CONV_5_3
PUSHS GF@__TMP2
PUSHS string@string
EQS
PUSHS bool@false
JUMPIFEQS __CONV_5_4
PUSHS string@
EQS
NOTS
JUMP __CONV_5_END
LABEL __CONV_5_4
POPS GF@__TMP2
PUSHS bool@false
LABEL __CONV_5_END
#LOGIC_CHECK_END
PUSHS bool@false
JUMPIFEQS __IF_3_ELSE
CREATEFRAME
PUSHS string@nelze
MOVE GF@__ARG_CNT int@1
CALL write
PUSHS string@nelze
JUMP __IF_3_END
LABEL __IF_3_ELSE
DEFVAR LF@vysl
PUSHS int@1
POPS LF@vysl
LABEL __WHILE_6_START
PUSHS LF@a
PUSHS int@0
#NUMERNUMERIC_CONVERTER_START
POPS GF@__TMP2
POPS GF@__TMP1
TYPE GF@__TMP3 GF@__TMP2
PUSHS GF@__TMP3
TYPE GF@__TMP3 GF@__TMP1
PUSHS GF@__TMP3
EQS
PUSHS bool@false
JUMPIFEQS __CONV_7_1
PUSHS GF@__TMP1
PUSHS GF@__TMP2
JUMP __CONV_7_2
LABEL __CONV_7_1
PUSHS GF@__TMP3
PUSHS string@float
EQS
PUSHS bool@false
JUMPIFEQS __CONV_7_3
PUSHS GF@__TMP1
PUSHS GF@__TMP2
INT2FLOATS
JUMP __CONV_7_2
LABEL __CONV_7_3
PUSHS GF@__TMP1
INT2FLOATS
PUSHS GF@__TMP2
LABEL __CONV_7_2
#NUMERNUMERIC_CONVERTER_END
GTS
#LOGIC_CHECK_START
POPS GF@__TMP1
PUSHS GF@__TMP1
TYPE GF@__TMP2 GF@__TMP1
PUSHS GF@__TMP2
PUSHS string@bool
EQS
PUSHS bool@false
JUMPIFEQS __CONV_8_1
PUSHS bool@false
EQS
NOTS
JUMP __CONV_8_END
LABEL __CONV_8_1
PUSHS GF@__TMP2
PUSHS string@int
EQS
PUSHS bool@false
JUMPIFEQS __CONV_8_2
PUSHS int@0
EQS
NOTS
JUMP __CONV_8_END
LABEL __CONV_8_2
PUSHS GF@__TMP2
PUSHS string@float
EQS
PUSHS bool@false
JUMPIFEQS __CONV_8_3
PUSHS float@0x0.0p+0
EQS
NOTS
JUMP __CONV_8_END
LABEL __CONV_8_3
PUSHS GF@__TMP2
PUSHS string@string
EQS
PUSHS bool@false
JUMPIFEQS __CONV_8_4
PUSHS string@
EQS
NOTS
JUMP __CONV_8_END
LABEL __CONV_8_4
POPS GF@__TMP2
PUSHS bool@false
LABEL __CONV_8_END
#LOGIC_CHECK_END
PUSHS bool@false
JUMPIFEQS __WHILE_6_END
PUSHS LF@vysl
PUSHS LF@a
#NUMERNUMERIC_CONVERTER_START
POPS GF@__TMP2
POPS GF@__TMP1
TYPE GF@__TMP3 GF@__TMP2
PUSHS GF@__TMP3
TYPE GF@__TMP3 GF@__TMP1
PUSHS GF@__TMP3
EQS
PUSHS bool@false
JUMPIFEQS __CONV_9_1
PUSHS GF@__TMP1
PUSHS GF@__TMP2
JUMP __CONV_9_2
LABEL __CONV_9_1
PUSHS GF@__TMP3
PUSHS string@float
EQS
PUSHS bool@false
JUMPIFEQS __CONV_9_3
PUSHS GF@__TMP1
PUSHS GF@__TMP2
INT2FLOATS
JUMP __CONV_9_2
LABEL __CONV_9_3
PUSHS GF@__TMP1
INT2FLOATS
PUSHS GF@__TMP2
LABEL __CONV_9_2
#NUMERNUMERIC_CONVERTER_END
MULS
POPS LF@vysl
PUSHS LF@a
PUSHS int@1
#NUMERNUMERIC_CONVERTER_START
POPS GF@__TMP2
POPS GF@__TMP1
TYPE GF@__TMP3 GF@__TMP2
PUSHS GF@__TMP3
TYPE GF@__TMP3 GF@__TMP1
PUSHS GF@__TMP3
EQS
PUSHS bool@false
JUMPIFEQS __CONV_10_1
PUSHS GF@__TMP1
PUSHS GF@__TMP2
JUMP __CONV_10_2
LABEL __CONV_10_1
PUSHS GF@__TMP3
PUSHS string@float
EQS
PUSHS bool@false
JUMPIFEQS __CONV_10_3
PUSHS GF@__TMP1
PUSHS GF@__TMP2
INT2FLOATS
JUMP __CONV_10_2
LABEL __CONV_10_3
PUSHS GF@__TMP1
INT2FLOATS
PUSHS GF@__TMP2
LABEL __CONV_10_2
#NUMERNUMERIC_CONVERTER_END
SUBS
POPS LF@a
JUMP __WHILE_6_START
LABEL __WHILE_6_END
CREATEFRAME
PUSHS LF@vysl
MOVE GF@__ARG_CNT int@1
CALL write
PUSHS LF@vysl
LABEL __IF_3_END
POPFRAME